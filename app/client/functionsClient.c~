#include "functionsClient.h"
#include "../protocol/protocoloCMD.h"

/*
FUNCION
Descipcion :
Nombre :
Recibe:
Retorna:
*/

void showHelpClient()
	{
  system("clear");
  printf("----------------------------------------------------------------------\n");
  printf("--------------------------CMD----------------------------\n");
  printf("----------------------------------------------------------------------\n");
  printf("\n");
  printf("Puede realizar las siguientes operaciones ejecutando los comandos:\n\n");
  printf("<ls|pwd|cd> <dir>:\n\n");
  printf("HELP Ayuda\n");
  printf("SALIR - Sale del programa\n");
  printf("\n");
}

void showReadComando(char *teclado)
{
			
	printf( "$ > ");
	fgets(teclado, 255, stdin);
	teclado[strlen(teclado) - 1] = '\0';
	fflush(stdin);
	
}

/*
FUNCION
Descipcion :
Nombre :
Recibe:
Retorna:
*/
/*
void *showConsole(void *arg)
{
	
	int sd = *( (int *) arg);
	
	int showConsole=1;
	int exit = 0;
	char teclado[256];

	char* operacion = NULL;
	char* buffer= NULL;

	showHelpClient();
	
	while( showConsole !=0)
	{
		char teclado[256];		
		printf( "$ > ");
		fgets(teclado, sizeof(teclado), stdin);
		teclado[strlen(teclado) - 1] = '\0';
		fflush(stdin);

		operacion = strtok (teclado," ");

		if( strcmp(operacion, "SUMA")==0)
		{
			}
		else
			{
				if( strcmp(operacion, "RESTA")==0)
				{
					
				}
				else if( strcmp(operacion, "SALIR")==0)
				{
					
					showConsole=0;
					raise(SIGINT);

					
				}
				else if( strcmp(operacion, "HELP")==0)
				{
					system("clear");
					showHelpClient();

					
				}
				else
					{
						printf("Operacion Invalida\n");
					}

			}
		}

	if( buffer)
		free( buffer);

}

*/
/*
FUNCION
Descipcion :
Nombre :
Recibe:
Retorna:
*/

